{"ast":null,"code":"import { getPosts, getUsers, getComments, getPost, deletePost, addPost, addComment, deleteComment } from \"./api\";\nimport { ActionCreator } from \"./store/action\";\nexport const fetchPosts = () => dispatch => {\n  return getPosts().then(response => {\n    dispatch(ActionCreator.updatePosts(response));\n  }).then(() => {\n    dispatch(ActionCreator.gotPosts());\n  });\n};\nexport const fetchUsers = () => dispatch => {\n  return getUsers().then(response => {\n    dispatch(ActionCreator.getUsers(response));\n  });\n};\nexport const fetchComments = id => dispatch => {\n  getComments(id).then(response => {\n    dispatch(ActionCreator.getComments(response));\n  });\n};\nexport const fetchPost = id => dispatch => {\n  getPost(id).then(response => {\n    dispatch(ActionCreator.savePost(response));\n  }).then(() => {\n    dispatch(ActionCreator.combinePost());\n  });\n};\nexport const fetchDeletePost = id => dispatch => {\n  deletePost(id).then(response => {\n    if (response.status === 200) {\n      dispatch(ActionCreator.deletePost(id));\n    }\n  });\n};\nexport const fetchAddNewPost = data => dispatch => {\n  addPost(data).then(newData => {\n    dispatch(ActionCreator.handleSendBtn(newData));\n  });\n};\nexport const fetchAddNewComment = data => dispatch => {\n  addComment(data).then(newData => {\n    dispatch(ActionCreator.handleSendBtnMessage(newData));\n  });\n};\nexport const fetchDeleteComment = id => dispatch => {\n  deleteComment(id).then(() => {\n    dispatch(ActionCreator.deleteComment(id));\n  });\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/test/src/api-actions.js"],"names":["getPosts","getUsers","getComments","getPost","deletePost","addPost","addComment","deleteComment","ActionCreator","fetchPosts","dispatch","then","response","updatePosts","gotPosts","fetchUsers","fetchComments","id","fetchPost","savePost","combinePost","fetchDeletePost","status","fetchAddNewPost","data","newData","handleSendBtn","fetchAddNewComment","handleSendBtnMessage","fetchDeleteComment"],"mappings":"AAAA,SACEA,QADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,UAPF,EAQEC,aARF,QASO,OATP;AAUA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAD,IAAc;AAC5C,SAAOV,QAAQ,GACZW,IADI,CACEC,QAAD,IAAc;AAClBF,IAAAA,QAAQ,CAACF,aAAa,CAACK,WAAd,CAA0BD,QAA1B,CAAD,CAAR;AACD,GAHI,EAIJD,IAJI,CAIC,MAAM;AACVD,IAAAA,QAAQ,CAACF,aAAa,CAACM,QAAd,EAAD,CAAR;AACD,GANI,CAAP;AAOD,CARM;AAUP,OAAO,MAAMC,UAAU,GAAG,MAAOL,QAAD,IAAc;AAC5C,SAAOT,QAAQ,GAAGU,IAAX,CAAiBC,QAAD,IAAc;AACnCF,IAAAA,QAAQ,CAACF,aAAa,CAACP,QAAd,CAAuBW,QAAvB,CAAD,CAAR;AACD,GAFM,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMI,aAAa,GAAIC,EAAD,IAASP,QAAD,IAAc;AACjDR,EAAAA,WAAW,CAACe,EAAD,CAAX,CAAgBN,IAAhB,CAAsBC,QAAD,IAAc;AACjCF,IAAAA,QAAQ,CAACF,aAAa,CAACN,WAAd,CAA0BU,QAA1B,CAAD,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMM,SAAS,GAAID,EAAD,IAASP,QAAD,IAAc;AAC7CP,EAAAA,OAAO,CAACc,EAAD,CAAP,CACGN,IADH,CACSC,QAAD,IAAc;AAClBF,IAAAA,QAAQ,CAACF,aAAa,CAACW,QAAd,CAAuBP,QAAvB,CAAD,CAAR;AACD,GAHH,EAIGD,IAJH,CAIQ,MAAM;AACVD,IAAAA,QAAQ,CAACF,aAAa,CAACY,WAAd,EAAD,CAAR;AACD,GANH;AAOD,CARM;AAUP,OAAO,MAAMC,eAAe,GAAIJ,EAAD,IAASP,QAAD,IAAc;AACnDN,EAAAA,UAAU,CAACa,EAAD,CAAV,CAAeN,IAAf,CAAqBC,QAAD,IAAc;AAChC,QAAIA,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EAA6B;AAC3BZ,MAAAA,QAAQ,CAACF,aAAa,CAACJ,UAAd,CAAyBa,EAAzB,CAAD,CAAR;AACD;AACF,GAJD;AAKD,CANM;AAQP,OAAO,MAAMM,eAAe,GAAIC,IAAD,IAAWd,QAAD,IAAc;AACrDL,EAAAA,OAAO,CAACmB,IAAD,CAAP,CAAcb,IAAd,CAAoBc,OAAD,IAAa;AAC9Bf,IAAAA,QAAQ,CAACF,aAAa,CAACkB,aAAd,CAA4BD,OAA5B,CAAD,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAME,kBAAkB,GAAIH,IAAD,IAAWd,QAAD,IAAc;AACxDJ,EAAAA,UAAU,CAACkB,IAAD,CAAV,CAAiBb,IAAjB,CAAuBc,OAAD,IAAa;AACjCf,IAAAA,QAAQ,CAACF,aAAa,CAACoB,oBAAd,CAAmCH,OAAnC,CAAD,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMI,kBAAkB,GAAIZ,EAAD,IAASP,QAAD,IAAc;AACtDH,EAAAA,aAAa,CAACU,EAAD,CAAb,CAAkBN,IAAlB,CAAuB,MAAM;AAC3BD,IAAAA,QAAQ,CAACF,aAAa,CAACD,aAAd,CAA4BU,EAA5B,CAAD,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import {\r\n  getPosts,\r\n  getUsers,\r\n  getComments,\r\n  getPost,\r\n  deletePost,\r\n  addPost,\r\n  addComment,\r\n  deleteComment\r\n} from \"./api\";\r\nimport { ActionCreator } from \"./store/action\";\r\n\r\nexport const fetchPosts = () => (dispatch) => {\r\n  return getPosts()\r\n    .then((response) => {\r\n      dispatch(ActionCreator.updatePosts(response));\r\n    })\r\n    .then(() => {\r\n      dispatch(ActionCreator.gotPosts());\r\n    });\r\n};\r\n\r\nexport const fetchUsers = () => (dispatch) => {\r\n  return getUsers().then((response) => {\r\n    dispatch(ActionCreator.getUsers(response));\r\n  });\r\n};\r\n\r\nexport const fetchComments = (id) => (dispatch) => {\r\n  getComments(id).then((response) => {\r\n    dispatch(ActionCreator.getComments(response));\r\n  });\r\n};\r\n\r\nexport const fetchPost = (id) => (dispatch) => {\r\n  getPost(id)\r\n    .then((response) => {\r\n      dispatch(ActionCreator.savePost(response));\r\n    })\r\n    .then(() => {\r\n      dispatch(ActionCreator.combinePost());\r\n    });\r\n};\r\n\r\nexport const fetchDeletePost = (id) => (dispatch) => {\r\n  deletePost(id).then((response) => {\r\n    if (response.status === 200) {\r\n      dispatch(ActionCreator.deletePost(id));\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchAddNewPost = (data) => (dispatch) => {\r\n  addPost(data).then((newData) => {\r\n    dispatch(ActionCreator.handleSendBtn(newData));\r\n  });\r\n};\r\n\r\nexport const fetchAddNewComment = (data) => (dispatch) => {\r\n  addComment(data).then((newData) => {\r\n    dispatch(ActionCreator.handleSendBtnMessage(newData));\r\n  });\r\n};\r\n\r\nexport const fetchDeleteComment = (id) => (dispatch) => {\r\n  deleteComment(id).then(() => {\r\n    dispatch(ActionCreator.deleteComment(id));\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}